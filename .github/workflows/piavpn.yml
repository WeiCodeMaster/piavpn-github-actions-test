name: Test PIA VPN Connection (Docker)
on:
  push:           # Runs automatically on each commit
  workflow_dispatch:  # Also allows manual triggering
jobs:
  test-pia-manual:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Run PIA VPN with direct OpenVPN approach
        run: |
          # Disable immediate exit on error in the host shell so we can capture the exit code.
          set +e
          docker run --rm --privileged --security-opt seccomp=unconfined --security-opt apparmor=unconfined ubuntu:latest bash -c '
            set -e
            export DEBIAN_FRONTEND=noninteractive
            echo "Installing minimal dependencies..."
            apt update && apt install -y --no-install-recommends openvpn curl wget unzip
            
            echo "Initial network test..."
            echo "Initial public IP: $(curl -s https://api.ipify.org)"
            
            echo "Setting up minimal PIA connection..."
            mkdir -p /tmp/pia
            cd /tmp/pia
            
            # Download only one specific OpenVPN config rather than the whole zip
            wget -q https://www.privateinternetaccess.com/openvpn/ca_montreal.ovpn
            
            echo "Creating credentials file..."
            echo "${{ secrets.PIA_USERNAME }}" > /tmp/pia/auth.txt
            echo "${{ secrets.PIA_PASSWORD }}" >> /tmp/pia/auth.txt
            chmod 600 /tmp/pia/auth.txt
            
            echo "Modifying OpenVPN config to use port 443..."
            sed -i "s/remote ca-montreal.privateinternetaccess.com 1198 udp/remote ca-montreal.privateinternetaccess.com 443 tcp/" /tmp/pia/ca_montreal.ovpn
            
            # Add explicit DNS settings to improve reliability
            echo "Adding explicit DNS config..."
            echo "dhcp-option DNS 8.8.8.8" >> /tmp/pia/ca_montreal.ovpn
            echo "dhcp-option DNS 8.8.4.4" >> /tmp/pia/ca_montreal.ovpn
            
            echo "Starting OpenVPN in the background..."
            openvpn --config /tmp/pia/ca_montreal.ovpn --auth-user-pass /tmp/pia/auth.txt --daemon --log /tmp/openvpn.log --verb 3
            
            echo "Waiting for VPN connection to establish..."
            counter=0
            while [ $counter -lt 15 ]; do
              if ip a | grep -q tun0; then
                echo "VPN interface detected!"
                break
              fi
              echo "Waiting for VPN connection... ($counter/15)"
              sleep 2
              counter=$((counter + 1))
            done
            
            # Show logs if we have the interface but check if we can actually route traffic
            if ip a | grep -q tun0; then
              echo "VPN interface is present, testing connection..."
              new_ip=$(curl -s --max-time 10 https://api.ipify.org)
              if [ ! -z "$new_ip" ]; then
                echo "Connection successful! New IP: $new_ip"
                exit 0
              else
                echo "VPN interface exists but cannot reach the internet."
                cat /tmp/openvpn.log
                exit 1
              fi
            else
              echo "Failed to establish VPN connection. Logs:"
              cat /tmp/openvpn.log
              exit 1
            fi
          '
          exit_code=$?
          echo "Docker run exit code: $exit_code"
          exit $exit_code
