name: Test PIA VPN Connection (Docker)
on:
  push:           # Runs automatically on each commit
  workflow_dispatch:  # Also allows manual triggering
jobs:
  test-pia-manual:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Run PIA VPN using alternative port
        run: |
          # Disable immediate exit on error in the host shell so we can capture the exit code.
          set +e
          docker run --rm --privileged --security-opt seccomp=unconfined --security-opt apparmor=unconfined ubuntu:latest bash -c '
            set -e
            export DEBIAN_FRONTEND=noninteractive
            echo "Installing base dependencies..."
            apt update && apt install -y --no-install-recommends curl wget sudo iproute2 apt-transport-https gnupg ca-certificates openvpn unzip net-tools iputils-ping dnsutils
            
            echo "Downloading PIA OpenVPN configurations..."
            mkdir -p /etc/openvpn/pia
            cd /etc/openvpn/pia
            wget -q https://www.privateinternetaccess.com/openvpn/openvpn.zip
            unzip -o openvpn.zip
            
            echo "Creating credentials file..."
            echo "${{ secrets.PIA_USERNAME }}" > /etc/openvpn/pia/auth.txt
            echo "${{ secrets.PIA_PASSWORD }}" >> /etc/openvpn/pia/auth.txt
            chmod 600 /etc/openvpn/pia/auth.txt
            
            # Try a different server and port (port 443 is often allowed through firewalls)
            echo "Modifying OpenVPN config to use port 443..."
            # Copy the configuration file
            cp /etc/openvpn/pia/us_east.ovpn /etc/openvpn/pia/custom.ovpn
            
            # Modify the config to use TCP port 443 (commonly allowed)
            sed -i "s/remote.*1198 udp/remote 104.200.151.57 443 tcp/" /etc/openvpn/pia/custom.ovpn
            
            echo "Starting OpenVPN connection with modified configuration..."
            sudo openvpn --config /etc/openvpn/pia/custom.ovpn --auth-user-pass /etc/openvpn/pia/auth.txt --daemon --log /var/log/openvpn.log --verb 4
            
            echo "Waiting for connection to establish..."
            for i in $(seq 1 30); do
              echo "Checking connection attempt $i..."
              if ip a | grep -q tun0; then
                echo "VPN interface detected!"
                break
              fi
              sleep 2
              
              # Check OpenVPN logs periodically
              if [ $((i % 5)) -eq 0 ]; then
                echo "Current OpenVPN log:"
                tail -n 20 /var/log/openvpn.log
              fi
            done
            
            # Check if VPN interface exists
            if ! ip a | grep -q tun0; then
              echo "VPN interface not found after waiting. Showing logs:"
              cat /var/log/openvpn.log
              echo "Network interfaces:"
              ip a
              exit 1
            fi
            
            echo "Testing connection..."
            echo "Current public IP: $(curl -s https://api64.ipify.org)"
            
            # Check if we can get the IP
            current_ip=$(curl -s https://api64.ipify.org)
            if [[ -z "$current_ip" ]]; then
              echo "Failed to get current IP. Connection may have failed."
              echo "Full OpenVPN logs:"
              cat /var/log/openvpn.log
              exit 1
            fi
            
            echo "VPN connection successful with IP: $current_ip"
          '
          rc=$?
          echo "Docker run exit code: $rc"
          if [ $rc -eq 125 ]; then
            echo "Ignoring exit code 125 from Docker cleanup error."
            exit 0
          else
            exit $rc
          fi
