name: Rumble Visit with VPN in Container

on:
  push:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      video_url:
        description: "Rumble Video URL"
        required: true
        default: "https://rumble.com/v6r0vz6-automate.html"

jobs:
  rumble-vpn:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Script Directory
        run: |
          mkdir -p screenshots

      - name: Run OpenVPN Connection and Basic Test
        run: |
          docker run --rm --privileged --cap-add=NET_ADMIN --security-opt seccomp=unconfined --security-opt apparmor=unconfined -v $(pwd):/workspace ubuntu:latest bash -c "
            set -e
            export DEBIAN_FRONTEND=noninteractive
            
            echo 'Installing basic dependencies...'
            apt-get update
            apt-get install -y wget unzip openvpn ca-certificates iproute2 curl
            
            echo 'Setting up OpenVPN connection to PIA...'
            mkdir -p /tmp/pia
            cd /tmp/pia
            wget -q https://www.privateinternetaccess.com/openvpn/openvpn.zip
            unzip -q openvpn.zip
            
            echo 'Creating credentials file...'
            echo '${{ secrets.PIA_USERNAME }}' > /tmp/pia/auth.txt
            echo '${{ secrets.PIA_PASSWORD }}' >> /tmp/pia/auth.txt
            chmod 600 /tmp/pia/auth.txt
            
            echo 'Starting OpenVPN connection...'
            SERVER_FILE=/tmp/pia/us_east.ovpn
            sed -i 's/auth-user-pass/auth-user-pass \/tmp\/pia\/auth.txt/' \$SERVER_FILE
            openvpn --config \$SERVER_FILE --daemon --log /workspace/openvpn.log
            
            echo 'Waiting for VPN interface to establish...'
            for i in \$(seq 1 12); do
              echo \"Checking for VPN interface (attempt \$i)...\"
              if ip a | grep -q tun0; then
                echo \"VPN interface detected!\"
                ip a show tun0
                echo \"VPN routing table:\"
                ip route
                
                # Test connectivity through VPN
                echo \"Testing VPN connectivity...\"
                curl -s https://api.ipify.org || echo \"IP service timeout as expected through VPN\"
                
                echo \"VPN Connection Test: SUCCESS\" > /workspace/vpn_test_result.log
                exit 0
              fi
              
              if [ \$i -eq 12 ]; then
                echo \"VPN Connection Failed\"
                cat /workspace/openvpn.log
                echo \"VPN Connection Test: FAILED\" > /workspace/vpn_test_result.log
                exit 1
              fi
              
              if [ \$((i % 3)) -eq 0 ]; then
                echo \"Current OpenVPN log:\"
                tail -n 20 /workspace/openvpn.log
              fi
              
              sleep 5
            done
          "

      - name: Upload VPN Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vpn-test-results
          path: |
            *.log
          retention-days: 7
